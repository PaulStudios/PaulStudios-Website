services:
  db:
    image: postgres:16.3-alpine
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=main
      - POSTGRES_USER=web
      - POSTGRES_PASSWORD=authcode

  redis:
    image: redis:7.2.5-alpine
    restart: always
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "200mb", "--maxmemory-policy", "allkeys-lru"]
    volumes:
      - redis_data:/data

  nginx:
      image: nginx:alpine
      restart: always
      ports:
        - "80:80"
      volumes:
        - ./staticfiles/:/var/www/static/
        - ./media/:/var/www/media/
        - ./nginx/conf.d/:/etc/nginx/conf.d/
      depends_on:
        - web

  ngrok:
    image: ngrok/ngrok:latest
    environment:
      - NGROK_AUTHTOKEN=2galn8gZQzta2tjAwYBNbJzahpU_6RUoBTDMQe6xUeFENKxVz
    command: http --domain=glowworm-known-raven.ngrok-free.app 80 --log=stdout
    network_mode: host
    stdin_open: true
    tty: true

  web:
    image: hilfing/paulstudios-website
    command: gunicorn --config gunicorn.conf.py --statsd-host=statsd-exporter:9125 --statsd-prefix=paulstudios.web PaulStudios.wsgi:application
    expose:
      - "8000"
    env_file:
      - ./PaulStudios/.env
    depends_on:
      - db
      - redis
    environment:
      - APP_NAME="PaulStudios"
      - STATSD_HOST="statsd-exporter"
      - STATSD_PORT="9125"

  worker:
    image: hilfing/paulstudios-website
    command: celery -A PaulStudios worker --loglevel=info -c 3
    restart: always
    scale: 5
    env_file:
      - ./PaulStudios/.env
    depends_on:
      - db
      - redis

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
      - FLOWER_PERSISTENT=True
      - FLOWER_STATE_SAVE_INTERVAL=10000
    ports:
      - "5555:5555"
    volumes:
      - flower_data:/data

  # Prometheus
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # Grafana
  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=adminauth                                            
    volumes:
      - grafana_data:/var/lib/grafana

  # PostgreSQL Exporter
  postgres-exporter:
    image: wrouesnel/postgres_exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://web:authcode@db:5432/main?sslmode=disable"
    depends_on:
      - db

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter
    restart: always
    command:
      - "--redis.addr=redis:6379"
    depends_on:
      - redis

  statsd-exporter:
    image: prom/statsd-exporter:v0.22.4
    restart: always
    volumes:
      - "./statsd:/statsd" # mapping file
    command:
      - --statsd.mapping-config=/statsd/statsd.conf # options
    depends_on:
      - web

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: always
    volumes:
      - '/:/host:ro,rslave'

  celery-exporter:
    image: danihodovic/celery-exporter
    restart: always
    command: --broker-url=redis://redis


volumes:
  db_data:
  grafana_data: 
  redis_data:
  flower_data:
