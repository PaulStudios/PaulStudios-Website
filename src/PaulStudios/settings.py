"""
Django settings for PaulStudios project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
import sys
from pathlib import Path
import environ
from decouple import config
import dj_database_url
from django.core.management.commands.runserver import Command as runserver

env = environ.Env()
environ.Env.read_env()

DATABASE_URL = config('DATABASE_URL')

MODE = "production"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

if "PORT" in os.environ:
    runserver.default_port = env("PORT")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if 'test' in sys.argv:
    SECRET_KEY = "56557s45NY&S$N5^$%n^$%s6n%bdty"
else:
    SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ["*"]
CSRF_TRUSTED_ORIGINS = ["https://a0d6-103-76-82-163.ngrok-free.app"]

# Application definitions

INSTALLED_APPS = [
    'profiles',
    'base',
    'jarvisai',
    'songdownloader',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_extensions',
    'django_recaptcha',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'PaulStudios.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },

    },
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
]

WSGI_APPLICATION = 'PaulStudios.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASE_LIST = {
    'test': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'local_testing.sqlite'
    },
    'dev': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'prod': dj_database_url.parse(DATABASE_URL, conn_max_age=600)
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CONN_HEALTH_CHECKS = True

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

AUTH_USER_MODEL = "profiles.UserProfile"

LOGIN_REDIRECT_URL = '/profiles/info'

LOGIN_URL = '/profiles/login'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'

if not 'test' in sys.argv:
    EMAIL_HOST = env("EMAIL_HOST")
    EMAIL_PORT = env("EMAIL_PORT")
    EMAIL_HOST_USER = env("EMAIL_HOST_USER")
    EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
    EMAIL_SUBJECT_PREFIX = "[PaulStudios] "
    EMAIL_USE_TLS = True

if not 'test' in sys.argv:
    BRAINID = env("BRAINID")
    BRAINKEY = env("BRAINKEY")
else:
    BRAINID = "test"
    BRAINKEY = "tester"

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Kolkata'
CELERY_TASK_TRACK_STARTED = True

CELERY_WORKER_SEND_TASK_EVENTS = True
CELERY_TASK_SEND_SENT_EVENT = True

SONGDOWNLOADER_SPOTIFY_CLIENT_ID = env("SPOTIFY_CLIENT_ID")
SONGDOWNLOADER_SPOTIFY_CLIENT_SECRET = env("SPOTIFY_CLIENT_SECRET")
GCS_API_KEY = env("GCS_API_KEY")
GCS_ENGINE_ID = env("GCS_ENGINE_ID")
YT_API_KEY = env("YT_API_KEY")

RECAPTCHA_PUBLIC_KEY = env("RECAPTCHA_SITE_KEY")
RECAPTCHA_PRIVATE_KEY = env("RECAPTCHA_SECRET_KEY")

if MODE == "development":
    CELERY_BROKER_URL = 'redis://localhost:6379/0'
    CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media_development')
    REDIS_URL = 'redis://localhost:6379/1'
    if "test" in sys.argv:
        DATABASES = {'default': DATABASE_LIST.get("test")}
    else:
        DATABASES = {'default': DATABASE_LIST.get("dev")}
elif MODE == "production":
    CELERY_BROKER_URL = 'redis://redis:6379/0'
    CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
    REDIS_URL = 'redis://redis:6379/1'
    DATABASES = {'default': DATABASE_LIST.get("prod")}
    DEBUG = False
else:
    raise Exception("Invalid mode. Please check PaulStudios/settings.py")
